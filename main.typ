#import "template.typ": *

#show: project

#title()
#index()
= Contest
#insert("template.h")
#insert(".bashrc")
#insert(".vimrc")
#insert("binary_search.h")
= Data Structures
#insert("ds/hashmap.h")
#insert("ds/order_statistic_tree.h")
#insert("ds/uf.h")
#insert("ds/convex_hull_trick.h")
#insert("ds/compress_coords.h")
#insert("ds/op.h")
#insert("ds/sparse_table.h")
#insert("ds/iterative_segment_tree.h")
#insert("ds/fenwick_tree.h")
#insert("ds/compressed_fenwick_tree_2d.h")
#insert("ds/recursive_segment_tree.h")
#insert("ds/persistent_segment_tree.h")
#insert("ds/tag.h")
#insert("ds/lazy_segment_tree.h")
#insert("ds/dynamic_lazy_segment_tree.h")
#insert("ds/persistent_lazy_segment_tree.h")
#insert("ds/treap_node.h")
#insert("ds/treap.h")
#insert("ds/mo.h")
= Number Theory
// #insert("nt/mod_pow.h")
#insert("nt/modmul_ll.h")
#insert("nt/miller_rabin.h")
#insert("nt/factor.h")
#insert("nt/mod_arithmetic.h")
= Numerical
#insert("numerical/ntt.h")
#insert("numerical/matrix_inv_mod.h")
= Geometry
#insert("geometry/point.h")
#insert("geometry/side_of.h")
#insert("geometry/line_intersection.h")
#insert("geometry/closest_pair.h")
#insert("geometry/convex_hull.h")
#insert("geometry/circumcircle.h")
#insert("geometry/minimum_enclosing_circle.h")
#insert("geometry/minkowski.h")
#insert("geometry/halfplane_intersection.h")
= Strings
#insert("strings/hashing.h")
#insert("strings/suffix_array.h")
#insert("strings/kmp.h")
#insert("strings/zfunc.h")
#insert("strings/manacher.h")
= Graphs
#insert("graph/topo_sort.h")
#insert("graph/scc.h")
#insert("graph/bridges.h")
#insert("graph/2sat.h")
#insert("graph/lca.h")
#insert("graph/binary_lifting.h")
#insert("graph/hld.h")
= Flow
#insert("flow/hopcroft_karp.h")
#insert("flow/dinic.h")
#insert("flow/push_relabel.h")
#insert("flow/maxflow_with_demands.h")
#insert("flow/mcmf.h")
#insert("flow/weighted_matching.h")
#insert("flow/general_matching.h")
