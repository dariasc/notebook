#import "template.typ": *

#show: project

#title()
#index()
= Contest
#insert("template.h")
#insert(".bashrc")
#insert(".vimrc")
#insert("troubleshoot.txt")
#insert("binary_search.h")
= Data Structures
#insert("ds/hashmap.h")
#insert("ds/order_statistic_tree.h")
// #insert("ds/uf.h")
#insert("ds/uf_rollback.h")
#insert("ds/convex_hull_trick.h")
#insert("ds/compress_coords.h")
#insert("ds/op.h")
#insert("ds/sparse_table.h")
#insert("ds/iterative_segment_tree.h")
#insert("ds/fenwick_tree.h")
#insert("ds/compressed_fenwick_tree_2d.h")
#insert("ds/recursive_segment_tree.h")
#insert("ds/persistent_segment_tree.h")
#insert("ds/tag.h")
#insert("ds/lazy_segment_tree.h")
// #insert("ds/dynamic_lazy_segment_tree.h")
#insert("ds/persistent_lazy_segment_tree.h")
#insert("ds/treap_node.h")
#insert("ds/treap.h")
#insert("ds/mo.h")
#insert("ds/bit_vector.h")
#insert("ds/wavelet_matrix.h")
= Number Theory
// #insert("nt/mod_pow.h")
#insert("nt/modmul_ll.h")
#insert("nt/miller_rabin.h")
#insert("nt/factor.h")
#insert("nt/mod_arithmetic.h")
= Numerical
#insert("numerical/berlekamp_massey.h")
#insert("numerical/polynomial.h")
#insert("numerical/poly_interpolate.h")
#insert("numerical/poly_roots.h")
#insert("numerical/linear_recurrence.h")
#insert("numerical/int_determinant.h")
#insert("numerical/tridiagonal.h")
#insert("numerical/matrix_inv_mod.h")
#insert("numerical/solve_linear.h")
#insert("numerical/fst.h")
#insert("numerical/ntt.h")
#insert("numerical/golden_section_search.h")
#insert("numerical/hill_climbing.h")
#insert("numerical/integrate.h")
#insert("numerical/integrate_adaptive.h")
#insert("numerical/simplex.h")
= Geometry
#insert("geometry/point.h")
#insert("geometry/line_distance.h")
#insert("geometry/segment_distance.h")
#insert("geometry/line_intersection.h")
#insert("geometry/on_segment.h")
#insert("geometry/segment_intersection.h")
#insert("geometry/side_of.h")
#insert("geometry/linear_transformation.h")
#insert("geometry/closest_pair.h")
#insert("geometry/convex_hull.h")
#insert("geometry/circumcircle.h")
#insert("geometry/minimum_enclosing_circle.h")
#insert("geometry/minkowski.h")
#insert("geometry/halfplane_intersection.h")
#insert("geometry/polygon_area.h")
#insert("geometry/inside_polygon.h")
#insert("geometry/polygon_cut.h")
#insert("geometry/polygon_center.h")
#insert("geometry/polygon_union.h")
#insert("geometry/line_hull_intersection.h")
#insert("geometry/circle_polygon_intersection.h")
= 3D Geometry
#insert("geometry/point_3d.h")
#insert("geometry/hull_3d.h")
#insert("geometry/polyhedron_volume.h")
#insert("geometry/spherical_distance.h")
= Strings
#insert("strings/hashing.h")
#insert("strings/trie.h")
#insert("strings/suffix_array.h")
#insert("strings/suffix_tree.h")
#insert("strings/kmp.h")
#insert("strings/zfunc.h")
#insert("strings/manacher.h")
#insert("strings/aho_corasick.h")
= Graphs
#insert("graph/bellman_ford.h")
#insert("graph/topo_sort.h")
#insert("graph/scc.h")
#insert("graph/bridges.h")
#insert("graph/cuts.h")
#insert("graph/2sat.h")
#insert("graph/lca.h")
#insert("graph/binary_lifting.h")
#insert("graph/hld.h")
#insert("graph/euler_walk.h")
#insert("graph/maximum_clique.h")
#insert("graph/edge_coloring.h")
= Flow
#insert("flow/hopcroft_karp.h")
#insert("flow/dinic.h")
#insert("flow/push_relabel.h")
#insert("flow/maxflow_with_demands.h")
#insert("flow/mcmf.h")
#insert("flow/weighted_matching.h")
#insert("flow/general_matching.h")
= Various
#insert("various/interval_container.h")
#insert("various/constant_intervals.h")
#insert("various/interval_cover.h")
#insert("various/lis.h")
#insert("various/fast_knapsack.h")
